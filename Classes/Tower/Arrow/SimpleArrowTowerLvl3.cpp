#include "SimpleArrowTowerlvl3.h"#include "UpdatePanelLayer2.h"#include "BaseMap.h"#include "GameManager.h"#include "Arrow.h"#include "CossbowHunterTower.h"#include "TotemTower.h"bool SimpleArrowTowerlvl3::init(){	if (!BaseArrowTower::init())	{		return false;	}	this->setTowerType(TOWER_TYPE_ARCHER_3);        this->initArrowTowerBase(this->getLevel());        schedule(schedule_selector(SimpleArrowTowerlvl3::shoot), this->getShootPeriod());	SoundManager::playArcher3Ready();	return true;}#pragma mark - for update functionvoid SimpleArrowTowerlvl3::updateTower(){}void SimpleArrowTowerlvl3::showUpdateMenu(){	auto updatePanelLayer = UpdatePanelLayer2::createPanel(25, 26, this->getUpdateMoney(), this->getUpdateMoney());	updatePanelLayer->setTag(_terrain->getTag() + UPDATE_MENU_TAG);	updatePanelLayer->setTower(this);	updatePanelLayer->setPosition(this->getParent()->getPosition());	static_cast<BaseMap*>(this->getParent()->getParent())->mTouchLayer->addChild(updatePanelLayer);    	if (GameManager::getInstance()->CURRENT_LEVEL <= this->getUpdate1StartLevel()) {		updatePanelLayer->setCanUpdate1(false);	}    	if (GameManager::getInstance()->CURRENT_LEVEL <= this->getUpdate2StartLevel()) {		updatePanelLayer->setCanUpdate2(false);	}    	updatePanelLayer->playShowAnimation();	_isUpdateMenuShown = true;}void SimpleArrowTowerlvl3::update1(){    auto cossbowHunterTower = CossbowHunterTower::create();    cossbowHunterTower->setTerrain(_terrain);    cossbowHunterTower->setTag(_terrain->getTag());    cossbowHunterTower->setPosition(Point(0, 20));    _terrain->addChild(cossbowHunterTower);        //删除在缓冲子弹队列中的内容    this->refreshBulletVector();    this->removeTower();}void SimpleArrowTowerlvl3::update2(){    auto totemTower = TotemTower::create();    totemTower->setTerrain(_terrain);    totemTower->setTag(_terrain->getTag());    totemTower->setPosition(Point(0, 20));    _terrain->addChild(totemTower);        //删除在缓冲子弹队列中的内容    this->refreshBulletVector();    this->removeTower();}