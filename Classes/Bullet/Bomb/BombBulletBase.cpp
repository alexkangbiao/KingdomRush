#include "BombBulletBase.h"#include "Utility.h"bool BombBulletBase::initWithTypeAndLevel(BulletType bulletType, int level) {    if (!Bullet::initWithTypeAndLevel(bulletType, level)) {        return false;    }        return true;}void BombBulletBase::attackAreaMonster() {    bool isMiss = true;    auto monsterVector = GameManager::getInstance()->monsterVector;        SoundManager::playBomb();        int z = this->getBulletScope();    int zz = z * z;    for (int j = 0; j < monsterVector.size(); j++) {        auto monster = monsterVector.at(j);        if ( monster != nullptr            && ((this->getHasTowerProperty() && monster->getEnableAttackByTower())                || (this->getHasSoldierProperty() && monster->getEnableAttackBySoldier()))) {                                //面攻击                if (this->getIsAreaAttack()) {                    /*                     这里优化一下算法，如果子弹和monster的x,y只差大于炸弹爆炸的范围，                     就不要检测距离了，这样应该可以减少计算量                     */                    if (Utility::estimationNearestDistance(this->getBulletPosition().x - monster->getMonsterPosition().x,                                                    this->getBulletPosition().y - monster->getMonsterPosition().y,                                                    this->getBulletScope(),                                                    zz))                    {                        isMiss = false;                        this->handleHP(monster);                    }                }        }    }            if (isMiss) {        this->handleMissBullet();    }        this->handleFinishBullet();}