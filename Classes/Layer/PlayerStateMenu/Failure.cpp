#include "Failure.h"#include "TransitionGame.h"#include "GameView.h"#include "GameScene.h"#include "SoundManager.h"USING_NS_CC;bool Failure::init() {    if(!Layer::init()){        return false;    }    SoundManager::playQuestFailed();        this->initColorLayer();        this->initBakground();    this->initLabelAndButton();        this->runAction(Sequence::create(MoveBy::create(0.2f, Point(0, -500)),                                     CallFuncN::create(CC_CALLBACK_0(Failure::pauseGame, this)),                                     NULL));    return true;}void Failure::initColorLayer() {    Size visibleSize = Director::getInstance()->getVisibleSize();    auto colorLayer = LayerColor::create(Color4B(0, 0, 0, 160),                                         visibleSize.width,                                         visibleSize.height);//    colorLayer->setAnchorPoint(Vec2::ANCHOR_MIDDLE);//    colorLayer->setPosition(Point(size.width / 2,//                                  size.height / 2));    this->addChild(colorLayer, FailureDrawingOrderColorLayer);        auto listener = EventListenerTouchOneByOne::create();    listener->onTouchBegan = [&](Touch* touch, Event* event){        return true;    };    listener->setSwallowTouches(true);    _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, colorLayer);}void ::Failure::initBakground() {    baseSprite = Sprite::create();    baseSprite->setPosition(Point(Director::getInstance()->getWinSize().width / 2,                                  Director::getInstance()->getWinSize().height / 2 + 20 + 500));    this->addChild(baseSprite, FailureDrawingOrderBaseBackground);        auto chain_left = Sprite::createWithSpriteFrameName("options_chain.png");    chain_left->setAnchorPoint(Point(1,0));    chain_left->setPosition(Point(-190, 200));    baseSprite->addChild(chain_left);        auto chain_right = Sprite::createWithSpriteFrameName("options_chain.png");    chain_right->setAnchorPoint(Point(0,0));    chain_right->setPosition(Point(190, 200));    baseSprite->addChild(chain_right);        int boardWidth = Director::getInstance()->getVisibleSize().width * 0.7;//    int boardHeight = Director::getInstance()->getVisibleSize().height * 0.7;    auto middleCenterSprite = Sprite::createWithSpriteFrameName("options_tileMid_center.png");    int widthNumber  = (int (boardWidth  / middleCenterSprite->getContentSize().width  / 2)) * 2;//    int heightNumber = (int (boardHeight / middleCenterSprite->getContentSize().height / 2)) * 2;    for(int i = - widthNumber / 2; i <= widthNumber / 2; i++) {        auto middleCenter1 = Sprite::createWithSpriteFrameName("options_tileMid_center.png");        middleCenter1->setPosition(Point(i * middleCenter1->getContentSize().width,                                        - middleCenter1->getContentSize().height / 2));        baseSprite->addChild(middleCenter1);        auto middleCenter2 = Sprite::createWithSpriteFrameName("options_tileMid_center.png");        middleCenter2->setPosition(Point(i * middleCenter2->getContentSize().width,                                         middleCenter2->getContentSize().height / 2));        baseSprite->addChild(middleCenter2);    }            for(int j =-7;j<=7;j++)    {        auto top_center = Sprite::createWithSpriteFrame(SpriteFrameCache::getInstance()                                                        ->getSpriteFrameByName("options_tileTop_center.png"));        /*auto top_center = Sprite::createWithSpriteFrameName("options_tileTop_center.png");*/        top_center->setPosition(Point(32*j,+161));        baseSprite->addChild(top_center);    }        for(int j =-7;j<=7;j++)    {        auto top_center = Sprite::createWithSpriteFrame(SpriteFrameCache::getInstance()                                                        ->getSpriteFrameByName("options_tileTop_center.png"));        /*auto top_center = Sprite::createWithSpriteFrameName("options_tileTop_center.png");*/        top_center->setPosition(Point(32*j,-161));        top_center->setFlippedY(true);        baseSprite->addChild(top_center);    }    auto mid_left1 = Sprite::createWithSpriteFrameName("options_tileMid_left.png");    mid_left1->setPosition(Point(-369,-56));    baseSprite->addChild(mid_left1);    auto mid_left2 = Sprite::createWithSpriteFrameName("options_tileMid_left.png");    mid_left2->setPosition(Point(-369,56));    baseSprite->addChild(mid_left2);    auto mid_right1 = Sprite::createWithSpriteFrameName("options_tileMid_right.png");    mid_right1->setPosition(Point(369,-56));    baseSprite->addChild(mid_right1);    auto mid_right2 = Sprite::createWithSpriteFrameName("options_tileMid_right.png");    mid_right2->setPosition(Point(369,56));    baseSprite->addChild(mid_right2);            auto top_left1 = Sprite::createWithSpriteFrameName("options_tileTop_left.png");    top_left1->setPosition(Point(-347,161));    baseSprite->addChild(top_left1);        auto top_left2 = Sprite::createWithSpriteFrameName("options_tileTop_left.png");    top_left2->setFlippedY(true);    top_left2->setPosition(Point(-347,-161));    baseSprite->addChild(top_left2);        auto top_right1 = Sprite::createWithSpriteFrameName("options_tileTop_left.png");    top_right1->setPosition(Point(347,-161));    top_right1->setFlippedX(true);    top_right1->setFlippedY(true);    baseSprite->addChild(top_right1);        auto top_right2 = Sprite::createWithSpriteFrameName("options_tileTop_left.png");    top_right2->setPosition(Point(347,161));    top_right2->setFlippedX(true);    baseSprite->addChild(top_right2);        auto top_left_deco = Sprite::createWithSpriteFrameName("options_tileTop_deco.png");    top_left_deco->setPosition(Point(220,161));    baseSprite->addChild(top_left_deco);        auto down_left_deco = Sprite::createWithSpriteFrameName("options_tileTop_deco.png");    down_left_deco->setFlippedY(true);    down_left_deco->setPosition(Point(220,-161));    baseSprite->addChild(down_left_deco);        auto top_right_deco = Sprite::createWithSpriteFrameName("options_tileTop_deco.png");    top_right_deco->setFlippedX(true);    top_right_deco->setPosition(Point(-220,161));    baseSprite->addChild(top_right_deco);        auto down_right_deco = Sprite::createWithSpriteFrameName("options_tileTop_deco.png");    down_right_deco->setFlippedX(true);    down_right_deco->setFlippedY(true);    down_right_deco->setPosition(Point(-220,-161));    baseSprite->addChild(down_right_deco);        auto top_left_cut = Sprite::createWithSpriteFrameName("options_tileTop_cut.png");    top_left_cut->setPosition(Point(-266,161));    baseSprite->addChild(top_left_cut);        auto down_left_cut = Sprite::createWithSpriteFrameName("options_tileTop_cut.png");    down_left_cut->setFlippedY(true);    down_left_cut->setPosition(Point(-266,-161));    baseSprite->addChild(down_left_cut);        auto top_right_cut = Sprite::createWithSpriteFrameName("options_tileTop_cut.png");    top_right_cut->setFlippedX(true);    top_right_cut->setPosition(Point(266,161));    baseSprite->addChild(top_right_cut);        auto down_right_cut = Sprite::createWithSpriteFrameName("options_tileTop_cut.png");    down_right_cut->setFlippedX(true);    down_right_cut->setFlippedY(true);    down_right_cut->setPosition(Point(266,-161));    baseSprite->addChild(down_right_cut);    }void Failure::initLabelAndButton() {        auto str ="  USE GEMS TO GET\n  SPECIAL ITEMS TO BLAST\n  YOUR EMENIES!";        auto defeatLabel = Label::createWithTTF("DEFEAT!", "fonts/ObelixPro.ttf", 30);    defeatLabel->setPosition(Point(0, 150));    defeatLabel->setColor(Color3B(255,255,255));    baseSprite->addChild(defeatLabel, FailureDrawingOrderLabel);    auto itemsImage = Sprite::createWithSpriteFrameName("defeat_items.png");    itemsImage->setAnchorPoint(Vec2::ANCHOR_BOTTOM_LEFT);    itemsImage->setPosition(Point(20, -20));    baseSprite->addChild(itemsImage, FailureDrawingOrderLabel);        //蓝色字体下面的字体    auto contentLabel = Label::createWithTTF(str, "fonts/ObelixPro.ttf", 30);    contentLabel->setAnchorPoint(Vec2::ANCHOR_BOTTOM_RIGHT);    contentLabel->setPosition(Point(-20, -20));    contentLabel->setColor(Color3B(255,255,255));    baseSprite->addChild(contentLabel, FailureDrawingOrderLabel);            auto restartButton = MenuItemSprite::create(Sprite::createWithSpriteFrameName("options_buttons_0003.png"),                                                Sprite::createWithSpriteFrameName("options_buttons_0003.png"));    restartButton->setCallback(CC_CALLBACK_1(Failure::onRestartButtonTouch, this));    restartButton->setPosition(Point(- restartButton->getContentSize().width / 2 - 10,                                     - restartButton->getContentSize().height));        auto exitButton = MenuItemSprite::create(Sprite::createWithSpriteFrameName("options_buttons_0001.png"),                                             Sprite::createWithSpriteFrameName("options_buttons_0001.png"));    exitButton->setCallback(CC_CALLBACK_1(Failure::onExitButtonTouch, this));    exitButton->setPosition(Point(restartButton->getContentSize().width / 2 + 10,                                  - restartButton->getContentSize().height));    auto menu = Menu::create(restartButton, exitButton, NULL);    menu->setPosition(Vec2::ZERO);    baseSprite->addChild(menu, FailureDrawingOrderButton);}void Failure::onRestartButtonTouch(Ref *pSender) {    SoundManager::playClickEffect();    auto target = static_cast<MenuItemSprite *>(pSender);    target->setScale(0.9f);        Director::getInstance()->resume();    Director::getInstance()->replaceScene(TransitionGame::create(1.0f, GameScene::playGame(level,difficulty)));}void Failure::onExitButtonTouch(Ref *pSender) {    SoundManager::playClickEffect();    auto target = static_cast<MenuItemSprite *>(pSender);    target->setScale(0.9f);        Director::getInstance()->resume();    Director::getInstance()->replaceScene(TransitionGame::create(1.0f, GameView::createScene()));}void Failure::pauseGame() {    Director::getInstance()->pause();}