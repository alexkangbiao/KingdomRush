#include "UpdatePanelLayer.h"#include "GameManager.h"#include "BaseBuildIcon.h"#include "BaseMap.h"USING_NS_CC;bool UpdatePanelLayer::init() {    if ( !BasePanelLayer::init() ) {        return false;    }    _isBuilt = false;    _canUpdate = true;        return true;}void UpdatePanelLayer::addIcons() {    _updateIcon = BaseBuildIcon::createIcon(5, 0);    _updateIcon->setPosition(Point(0,                                   _ringBackgroundSprite->getContentSize().height / 2));    _updateIcon->setVisible(false);    _updateIcon->setTag(PanelLayerTagUpdate);    this->addChild(_updateIcon, PanelLayerDrawingOrderIcon);        _sellIcon = SellIcon::create();    _sellIcon->setPosition(Point(0,                                 - _ringBackgroundSprite->getContentSize().height / 2));    _sellIcon->setVisible(false);    _sellIcon->setTag(PanelLayerTagSell);    this->addChild(_sellIcon, PanelLayerDrawingOrderIcon);        _lockIcon = Sprite::createWithSpriteFrameName("main_icons_0014.png");    _lockIcon->setPosition(Point(0,                                 _ringBackgroundSprite->getContentSize().height / 2));    _lockIcon->setVisible(false);    this->addChild(_lockIcon, PanelLayerDrawingOrderLockIcon);        _thisLevelCircle = Circle::create();    _nextLevelCircle = Circle::create();        _thisLevelCircle->setScale(tower->getAttackScope() / _thisLevelCircle->getCircleSize().width);    this->addChild(_thisLevelCircle, PanelLayerDrawingOrderCircle);    _nextLevelCircle->setScale(tower->getNextScope() / _nextLevelCircle->getCircleSize().width);    this->addChild(_nextLevelCircle, PanelLayerDrawingOrderCircle);    _nextLevelCircle->setVisible(false);    _sellIcon->setVisible(true);        auto touchListener = EventListenerTouchOneByOne::create();    touchListener->setSwallowTouches(true);    touchListener->onTouchBegan = CC_CALLBACK_2(UpdatePanelLayer::onTouchBegan, this);    touchListener->onTouchEnded = CC_CALLBACK_2(UpdatePanelLayer::onTouchEnded, this);        _eventDispatcher->addEventListenerWithSceneGraphPriority(touchListener, _sellIcon);    if(_canUpdate){        _eventDispatcher->addEventListenerWithSceneGraphPriority(touchListener->clone(), _updateIcon);        _updateIcon->setVisible(true);        _updateIcon->updateMoneyLabel(tower->getUpdateMoney());    }else{        _lockIcon->setVisible(true);    }}bool UpdatePanelLayer::onTouchBegan(Touch *touch, Event *event) {    auto target = static_cast<BaseBuildIcon*>(event->getCurrentTarget());    Point locationInNode = target->convertTouchToNodeSpace(touch);    Size size = target->getSize();    Rect rect = Rect(-size.width / 2,                     -size.height / 2,                     size.width,                     size.height);    if (rect.containsPoint(locationInNode)) {        if(target->getIsSelected())//如果已经选中（第二次按下）        {            if(target->getIsMoneyEnough())//如果钱够用            {                static_cast<BaseMap*>(this->getParent()->getParent())->playerStateMenu->hideTowerInfo();                switch (target->getTag())                {                    case(PanelLayerTagUpdate)://升级                        SoundManager::playTowerUpdate();                        GameManager::getInstance()->CURRENT_MONEY = GameManager::getInstance()->CURRENT_MONEY - tower->getUpdateMoney();                        tower->updateTower();                        break;                    case(PanelLayerTagSell)://售出                        SoundManager::playTowerSell();                        GameManager::getInstance()->CURRENT_MONEY = GameManager::getInstance()->CURRENT_MONEY + (tower->getBuildMoney() / 2);                        tower->sellTower();                        break;                }                this->setVisible(false);                _isBuilt = true;            }        } else {//第一次按下            static_cast<BaseMap*>(this->getParent()->getParent())->playerStateMenu->hideTowerInfo();            _updateIcon->setSelected(false);            _sellIcon->setSelected(false);                        target->setSelected(true);//设置为选中状态            switch (target->getTag())            {                case(PanelLayerTagUpdate)://升级                    this->showTowerInfo();                    _nextLevelCircle->setVisible(true);                    break;                case(PanelLayerTagSell)://售出                    _nextLevelCircle->setVisible(false);                    break;            }        }        return true;    }    return false;}void UpdatePanelLayer::onTouchEnded(Touch* touch, Event* event) {    if(_isBuilt) {        removeFromParent();    }}