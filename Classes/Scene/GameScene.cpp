#include "GameScene.h"#include "Level.h"#include "PlayerStateMenu.h"#include "GameManager.h"#include "SpriteCacheManager.h"#include "AnimationManager.h"Scene* GameScene::playGame(int Level,int Difficulty){    auto scene = new GameScene();    if(scene && scene->initGame(Level,Difficulty)){        scene->autorelease();        return scene;    }    CC_SAFE_DELETE(scene);    return NULL;}bool GameScene::initGame(int level, int difficulty){    //载入所需要的图片文件到缓存中    SpriteCacheManager::getInstance()->loadGameSceneSpriteFile();        AnimationManager::getInstance()->loadTowerAnimation();    AnimationManager::getInstance()->loadOtherAnimationCache();        BaseMap* gameMap = Level::createGame(level, difficulty);        auto playerStateMenu = PlayerStateMenu::create();        playerStateMenu->setLevel(level);    playerStateMenu->setDifficult(difficulty);    playerStateMenu->initGameOption();    gameMap->bindPlayerStateMenu(playerStateMenu);    //    mTouchLayer = TouchLayer::create();////    mTouchLayer->setContentSize(mapBackgroundSprite->getContentSize());//    mTouchLayer->setAnchorPoint(Vec2::ZERO);//    mTouchLayer->setPosition(Vec2::ZERO);//    gameMap->bindTouchLayer(mTouchLayer);//    //    this->addChild(mTouchLayer, GameSceneDrawingOrderTouchLayer);        this->addChild(gameMap, GameSceneDrawingOrderMapLayer);    this->addChild(playerStateMenu, GameSceneDrawingOrderMenuLayer);        return true;}void GameScene::onExit() {    Scene::onExit();    AnimationManager::getInstance()->releaseTowerAnimation();    AnimationManager::getInstance()->releaseOtherAnimationCache();    SpriteCacheManager::getInstance()->releaseGameSceneSpriteFile();}