#include "MechaBomb.h"#include "GameManager.h"bool MechaBomb::init() {	if (! BombBulletBase::initWithTypeAndLevel(BULLET_TYPE_MECHABOMB, 1))	{		return false;	}//    this->setBulletType(BULLET_TYPE_MECHABOMB);//    //    this->addBulletSprite("Bombs_0006.png");////	this->setMaxForce(20);	this->setRotation(-360.0f);	return true;}void MechaBomb::shoot() {	this->runAction(Sequence::create(_bulletAction,                                     CallFuncN::create(CC_CALLBACK_0(MechaBomb::attackAreaMonster, this)),                                     NULL));}void MechaBomb::processMonsterDeath(BaseMonster * monster) {    monster->explosion();}void MechaBomb::handleFinishBullet() {    _bulletSprite->runAction(Sequence::create(Animate::create(AnimationCache::getInstance()->getAnimation("MechaBomb")),                                              CallFuncN::create(CC_CALLBACK_0(MechaBomb::removeFromParent, this)),                                              NULL));}//void MechaBomb::removeBullet()//{//	auto instance = GameManager::getInstance();////	auto MechaBombPostion = this->getPosition() + this->getParent()->getPosition();////	auto monsterVector = instance->monsterVector;////	for (int j = 0; j < monsterVector.size(); j++)//	{//		auto monster = monsterVector.at(j);//		auto monsterPosition = monster->baseSprite->getPosition();////		if(monster!=NULL && MechaBombPostion.distance(monsterPosition)<= 50 && monster->getEnableAttackBySoldier())//		{//			SoundManager::playBomb();//			auto currentHP = monster->getCurrentHP();////			currentHP =  currentHP - this->getMaxForce();//                //			if(currentHP <= 0){//				currentHP = 0;//			}//			monster->setCurrentHP( currentHP );////			monster->getHpBar()->setPercentage((currentHP/monster->getMaxHp())*100);//  //			if(currentHP == 0){//				monster->explosion();//				instance->monsterVector.eraseObject(monster);//			}//		}		//	}	//	_bulletSprite->runAction(Sequence::create(//		Animate::create(AnimationCache::getInstance()->getAnimation("MechaBomb")),//		CallFuncN::create(CC_CALLBACK_0(Bullet::removeFromParent, this))//		,NULL));//}