#include "BasePanelLayer.h"#include "GameManager.h"#include "BaseBuildIcon.h"#include "BaseMap.h"USING_NS_CC;bool BasePanelLayer::init() {    if ( !Sprite::init() ) {        return false;    }    _isBuilt = false;        this->addBackgroundRingImage();        return true;}void BasePanelLayer::playShowAnimation() {    SoundManager::playTowerMenu();    _ringBackgroundSprite->runAction(Sequence::create(ScaleTo::create(0.1f, 1.0f, 1.0f),                                                      CallFuncN::create(CC_CALLBACK_0(BasePanelLayer::addIcons, this)),                                                      CallFuncN::create(CC_CALLBACK_0(BasePanelLayer::addOthersIcons, this)),                                                      NULL));}void BasePanelLayer::addBackgroundRingImage() {    _ringBackgroundSprite = Sprite::createWithSpriteFrameName("gui_ring.png");    _ringBackgroundSprite->setPosition(Vec2::ZERO);    _ringBackgroundSprite->setScale(0.5f);    this->addChild(_ringBackgroundSprite, PanelLayerDrawingOrderRingBackground);}void BasePanelLayer::showTowerInfo() {    int updateType = tower->getTowerType();    switch (tower->getTowerType())    {        case(TOWER_TYPE_ARCHER_1):            updateType = TOWER_TYPE_ARCHER_2;            break;        case(TOWER_TYPE_ARCHER_2):            updateType = TOWER_TYPE_ARCHER_3;            break;        case(TOWER_TYPE_MAGE_1):            updateType = TOWER_TYPE_MAGE_2;            break;        case(TOWER_TYPE_MAGE_2):            updateType = TOWER_TYPE_MAGE_3;            break;        case(TOWER_TYPE_ARTILLERY_1):            updateType = TOWER_TYPE_ARTILLERY_2;            break;        case(TOWER_TYPE_ARTILLERY_2):            updateType = TOWER_TYPE_ARTILLERY_3;            break;        default:            break;    }    static_cast<BaseMap*>(this->getParent()->getParent())->playerStateMenu->showTowerInfo(updateType);}//设置到合适的点位，需要考虑到显示屏幕的大小void BasePanelLayer::setFitPosition(Point point) {}