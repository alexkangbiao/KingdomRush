#include "SpriteCacheManager.h"SpriteCacheManager* SpriteCacheManager::_spriteCacheManagerInstance;SpriteCacheManager* SpriteCacheManager::getInstance() {	if (_spriteCacheManagerInstance == nullptr)		_spriteCacheManagerInstance = new SpriteCacheManager();	return _spriteCacheManagerInstance;}#pragma mark for private functionvoid SpriteCacheManager::releaseSceneSpriteFile(std::string fileNames[]) {    }void SpriteCacheManager::loadSceneSpriteFile(std::string fileNames[]) {//    SpriteFrameCache::getInstance()->removeSpriteFrames();//    //    int num_strings = sizeof(fileNames) / sizeof(fileNames[0]);//    for (int i = 0; i < num_strings; i++) {//        SpriteFrameCache::getInstance()->addSpriteFramesWithFile(fileNames[i]);//    }}#pragma mark for Welcome Scene functionvoid SpriteCacheManager::loadWelcomeSceneSpriteFile() {    log("load WelcomeScene Sprite File");//    //    std::string fileNameArray[] = {"images/mainmenu_spritesheet_32_1-hd.plist",//                                   "images/mainmenu_spritesheet_32_2-hd.plist",//                                   "images/credits_scene-hd.plist"};//    this->loadSceneSpriteFile(fileNameArray);        SpriteFrameCache::getInstance()->removeSpriteFrames();    Director::getInstance()->getTextureCache()->removeAllTextures();        SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/mainmenu_spritesheet_32_1-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/mainmenu_spritesheet_32_2-hd.plist");        SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/credits_scene-hd.plist");//    SpriteFrameCache::getInstance()->removeUnusedSpriteFrames();        this->loadCommonSceneSpriteFile();}void SpriteCacheManager::releaseWelcomeSceneSpriteFile() {    log("release WelcomeScene Sprite File");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/mainmenu_spritesheet_32_1-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/mainmenu_spritesheet_32_2-hd.plist");        SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/credits_scene-hd.plist");//    SpriteFrameCache::getInstance()->removeUnusedSpriteFrames();    Director::getInstance()->getTextureCache()->removeUnusedTextures();}#pragma mark for GameView Scene functionvoid SpriteCacheManager::loadGameViewSceneSpriteFile() {//    SpriteFrameCache::getInstance()->removeSpriteFrames();        SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/map_spritesheet_16_a-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/map_spritesheet_16_a_3-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/map_spritesheet_16_na-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/map_spritesheet_16_na_2-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/map_spritesheet_32-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/map_spritesheet_32_2-hd.plist");    //    this->loadCommonSceneSpriteFile();}void SpriteCacheManager::releaseGameViewSceneSpriteFile() {    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/map_spritesheet_16_a-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/map_spritesheet_16_a_3-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/map_spritesheet_16_na-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/map_spritesheet_16_na_2-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/map_spritesheet_32-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/map_spritesheet_32_2-hd.plist");//    this->releaseCommonSceneSpriteFile();//    SpriteFrameCache::getInstance()->removeUnusedSpriteFrames();    Director::getInstance()->getTextureCache()->removeUnusedTextures();}#pragma mark for Game Scene functionvoid SpriteCacheManager::loadGameSceneSpriteFile() {    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/ingame_gui-hd.plist");        SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/gui_menu_sprite_campaign_32-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/gui_menu_sprite_iron_32-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/gui_menu_sprite_heroic_32-hd.plist");//    this->loadCommonSceneSpriteFile();}void SpriteCacheManager::releaseGameSceneSpriteFile() {    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/ingame_gui-hd.plist");        SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/gui_menu_sprite_campaign_32-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/gui_menu_sprite_iron_32-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/gui_menu_sprite_heroic_32-hd.plist");//    this->releaseCommonSceneSpriteFile();//    SpriteFrameCache::getInstance()->removeUnusedSpriteFrames();    Director::getInstance()->getTextureCache()->removeUnusedTextures();}#pragma mark for Story Scene functionvoid SpriteCacheManager::loadStorySpriteFile() {    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/cinematics_comic1-hd.plist");}void SpriteCacheManager::releaseStorySpriteFile() {    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/cinematics_comic1-hd.plist");}#pragma mark for monster functionvoid SpriteCacheManager::loadMonsterDesertSpriteFile() {    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/enemies_desert_3-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/enemies_desert-hd.plist");}void SpriteCacheManager::releaseMonsterDesertSpriteFile() {    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/enemies_desert_3-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/enemies_desert-hd.plist");}void SpriteCacheManager::loadMonsterJungleSpriteFile() {    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/enemies_jungle-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/enemies_jungle_2-hd.plist");}void SpriteCacheManager::releaseMonsterJungleSpriteFile() {    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/enemies_jungle-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/enemies_jungle_2-hd.plist");}void SpriteCacheManager::loadMonsterUndergroundSpriteFile() {    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/enemies_underground-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/enemies_underground_2-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/enemies_underground_3-hd.plist");}void SpriteCacheManager::releaseMonsterUndergroundSpriteFile() {    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/enemies_underground-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/enemies_underground_2-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/enemies_underground_3-hd.plist");}#pragma mark for tower functionvoid SpriteCacheManager::loadTowerSpriteFile() {    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/towers-hd.plist");}void SpriteCacheManager::releaseTowerSpriteFile() {    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/towers-hd.plist");}#pragma mark for common functionvoid SpriteCacheManager::loadCommonSceneSpriteFile() {    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/common_spritesheet_16_a_2-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/common_spritesheet_16_na-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/common_spritesheet_16_na_2_IPAD2-hd.plist");    SpriteFrameCache::getInstance()->addSpriteFramesWithFile("images/common_spritesheet_32-hd.plist");}void SpriteCacheManager::releaseCommonSceneSpriteFile() {    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/common_spritesheet_16_a_2-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/common_spritesheet_16_na-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/common_spritesheet_16_na_2_IPAD2-hd.plist");    SpriteFrameCache::getInstance()->removeSpriteFramesFromFile("images/common_spritesheet_32-hd.plist");}