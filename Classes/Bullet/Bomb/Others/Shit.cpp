#include "Shit.h"#include "GameManager.h"bool Shit::init() {    if (! BombBulletBase::initWithTypeAndLevel(BULLET_TYPE_VIOLETTOTEM, 1)) {        return false;    }    //    this->setBulletType(BULLET_TYPE_SHIT);//    this->setBulletScope(100);//    this->addBulletSprite("Mecha_Shit.png");    return true;}void Shit::shoot() {    this->attackAreaMonster();    //    auto instance = GameManager::getInstance();//    //    auto monsterVector = instance->monsterVector;//    //    for (int j = 0; j < monsterVector.size(); j++)//    {//        auto monster = monsterVector.at(j);//        auto monsterPosition = monster->getMonsterPosition();//        if(monster != NULL//           && (this->getPosition()+ this->getParent()->getPosition()).distance(monsterPosition) <= this->getBulletScope()//           && monster->getEnableAttackByTower())//        {//            monster->runOnSlowSpeed(3, 15);//        }//    }//    this->removeBullet();}void Shit::handleHP(BaseMonster * monster) {    monster->runOnSlowSpeed(3.0f, 15);}void Shit::handleFinishBullet() {    _bulletSprite->runAction(Sequence::create(DelayTime::create(2.0f),                                              FadeOut::create(1.0f),                                              CallFuncN::create(CC_CALLBACK_0(Shit::removeFromParent, this)),                                              NULL));}//void Shit::removeBullet() {//    _bulletSprite->runAction(Sequence::create(DelayTime::create(2.0f),//                                              FadeOut::create(1.0f),//                                              CallFuncN::create(CC_CALLBACK_0(Shit::removeFromParent, this)),//                                              NULL));//}