#include "BeginStory.h"#include "BaseMap.h"#include "SpriteCacheManager.h"USING_NS_CC;Scene* BeginStory::createScene(){    auto scene = Scene::create();    auto layer = BeginStory::create();    scene->addChild(layer);    return scene;}bool BeginStory::init() {    if ( !Layer::init() ) {        return false;    }        SpriteCacheManager::getInstance()->loadStorySpriteFile();        this->addColorLayer();    this->startAnimation1();        return true;}void BeginStory::addColorLayer() {    Size visibleSize = Director::getInstance()->getVisibleSize();    auto colorLayer = LayerColor::create(Color4B::BLACK,                                         visibleSize.width,                                         visibleSize.height);    this->addChild(colorLayer);        auto listener = EventListenerTouchOneByOne::create();    listener->setSwallowTouches(true);    listener->onTouchBegan = [&](Touch* touch, Event* event){        return true;    };    _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, colorLayer);}//游戏开始前的界面1void BeginStory::startAnimation1(){    Size visibleSize = Director::getInstance()->getVisibleSize(); //获取屏幕大小        _imageSprite1 = Sprite::createWithSpriteFrameName("1_1.png");    _imageSprite1->setPosition(Point(0,                                     visibleSize.height / 2));    this->addChild(_imageSprite1, 1);    _imageSprite1->runAction(MoveTo::create(0.5f, Point(visibleSize.width * 0.16,                                                       visibleSize.height / 2)));        _imageSprite2 = Sprite::createWithSpriteFrameName("1_2.png");    _imageSprite2->setPosition(Point(visibleSize.width,                                     visibleSize.height / 2));    this->addChild(_imageSprite2, 1);    _imageSprite2->runAction(Sequence::create(                                              Hide::create(),                                              DelayTime::create(1.0f),                                              Show::create(),                                              MoveTo::create(0.5f, Point(visibleSize.width*0.60,                                                                         visibleSize.height / 2)),                                              NULL));    //--------------------------------------------------------------------------------------------------------    _imageSprite3 = Sprite::createWithSpriteFrameName("1_3.png");    _imageSprite3->setPosition(Point(visibleSize.width * 0.75,                                     visibleSize.height * 0.0));    this->addChild(_imageSprite3, 1);    _imageSprite3->runAction(Sequence::create(                                              Hide::create(),                                              DelayTime::create(1.5f),Show::create(),                                              JumpTo ::create(0.5f, Point(visibleSize.width*0.75, visibleSize.height*0.45), 50, 1 ),                                              NULL));    //--------------------------------------------------------------------------------------------------------        _continueButton = Sprite::createWithSpriteFrameName("comicContinue.png");        _continueButton->setPosition(Point(-200,                                       visibleSize.height*0.13));    this->addChild(_continueButton,1);        _continueButton->runAction(Sequence::create(DelayTime::create(2),                                                JumpTo ::create(0.005f, Point(visibleSize.width*0.75,                                                                      visibleSize.height*0.13), 1, 1 ),                                                NULL));        auto listener = EventListenerTouchOneByOne::create();    listener->onTouchBegan = [&](Touch* touch, Event* event){                auto target = static_cast<Sprite*>(event->getCurrentTarget());                Point locationInNode = target->convertTouchToNodeSpace(touch);                Size size = target->getContentSize();        Rect rect = Rect(0, 0, size.width, size.height);        if (rect.containsPoint(locationInNode)&&target->isVisible()) {            _imageSprite1->removeFromParent();            _imageSprite2->removeFromParent();            _imageSprite3->removeFromParent();            this->startAnimation2();            return true;        }        return false;    };    listener->onTouchEnded = [&](Touch* touch, Event* event){        _eventDispatcher->removeEventListener(listener);    };    _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, _continueButton);}////游戏开始前的界面1，跳转页面void BeginStory::startAnimation2(){    _continueButton->removeFromParent();     Size visibleSize = Director::getInstance()->getVisibleSize(); //获取屏幕大小    auto imagerSprite4 = Sprite::createWithSpriteFrameName("1_4.png");    imagerSprite4->setPosition(Point(visibleSize.width / 3,                                     visibleSize.height));    this->addChild(imagerSprite4, 2);        imagerSprite4->runAction(MoveTo::create(0.5f, Point(visibleSize.width / 3,                                                        visibleSize.height*0.5)));        auto imagerSprite5 = Sprite::createWithSpriteFrameName("1_5.png");    imagerSprite5->setPosition(Point(visibleSize.width,                                     visibleSize.height / 2));    addChild(imagerSprite5, 2);    imagerSprite5->runAction(Sequence::create(Hide::create(),                                              DelayTime::create(1.0f),                                              Show::create(),                                              MoveTo::create(0.5f,Point(visibleSize.width*0.75,                                                                        visibleSize.height / 2)),                                              NULL));        //--------------------------------------------------------------------------------------------------------    auto continueImage = Sprite::createWithSpriteFrameName("comicContinue.png");    continueImage->setPosition(Point(visibleSize.width *0.80,                                     -300));    this->addChild(continueImage, 2);    continueImage->runAction(Sequence::create(                                              DelayTime::create(1.5),                                              JumpTo ::create(0.005f, Point(visibleSize.width*0.80,                                                                            visibleSize.height*0.15), 1, 1 ),                                              NULL));        auto listener = EventListenerTouchOneByOne::create();    listener->onTouchBegan = [&](Touch* touch, Event* event){                auto target = static_cast<Sprite*>(event->getCurrentTarget());                Point locationInNode = target->convertTouchToNodeSpace(touch);                Size size = target->getContentSize();        Rect rect = Rect(0, 0, size.width, size.height);        if (rect.containsPoint(locationInNode))        {              this->backToGame();            return true;          }          return false;      };        listener->onTouchEnded = [&](Touch* touch, Event* event){        _eventDispatcher->removeEventListener(listener);    };    _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, continueImage);}void BeginStory::backToGame() {    _gameScene->startGame();    this->removeFromParent();}