#ifndef _CHOOSE_DIFFICULTY_H_#define _CHOOSE_DIFFICULTY_H_#include "cocos2d.h"USING_NS_CC;enum ChooseDifficultyDrawingOrder : unsigned int {    ChooseDifficultyDrawingOrderBackground1st = 0,    ChooseDifficultyDrawingOrderBackground2nd,    ChooseDifficultyDrawingOrderBackground3rd,    ChooseDifficultyDrawingOrderDescription,    ChooseDifficultyDrawingOrderStar,    ChooseDifficultyDrawingOrderMenu};enum ChooseDifficultyTag : unsigned int {    ChooseDifficultyTagToggleDifficultLevelItem1 = 100,    ChooseDifficultyTagToggleDifficultLevelItem2,    ChooseDifficultyTagToggleDifficultLevelItem3};class ChooseDifficulty : public Layer{public:    static Scene* createSceneWithLevel(int level);        virtual bool init();    CREATE_FUNC(ChooseDifficulty);private:    int _level;    int _difficulty;    void initWithLevel(int level);        void addBackground1st();    void addBackground2nd();    void addBackground3rd();    void addThumbImage();        void addToggleDifficultLevelItems();    void addStarSptites();    void addKeyboardListener();        MenuItemToggle* _toggleDifficultLevelItem1; //挑战按钮    MenuItemToggle* _toggleDifficultLevelItem2; //英雄模式按钮    MenuItemToggle* _toggleDifficultLevelItem3; //钢铁模式按钮        void onTouchDifficultToggle1(Ref* pSpender);    void onTouchDifficultToggle2(Ref* pSpender);    void onTouchDifficultToggle3(Ref* pSpender);     std::string _blueTopString;    Sprite* _magnifyingGlassSprite;    Sprite* _star1;    Sprite* _star2;    Sprite* _star3;    Sprite* _star4;    Sprite* _star5;        Label *blueLabel; //蓝色字体标签    Label *blackLabel;//黑色字体标签        std::string blueStr[3]; //将蓝色字体设置为一个数组    std::string blackStr[3]; //将蓝色字体设置为一个数组        void readXMLFile(int level);    void addLabels();        MenuItemToggle *imgItem1;        Size _visibleSize;    Sprite *modeRulesSprite1;    Sprite *modeRulesSprite2;    Sprite *modeRulesSprite3;    Sprite *modeRulesSprite4;            // for callback function	void onMenuClose(Ref* pSpender);  //关闭按钮返回上一场景	void onMenuStart(Ref* pSpender);  //开始战斗按钮进入下一场景    void onKeyReleased(EventKeyboard::KeyCode keycode, Event* event);    	void setBadges(int star);protected:};#endif