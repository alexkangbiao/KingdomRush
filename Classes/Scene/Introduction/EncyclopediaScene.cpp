#include "EncyclopediaScene.h"#include "EncyclopaediaTips.h"#include "EnemyIntroScene.h"#include "TowerIntroScene.h"#include "SoundManager.h"USING_NS_CC;//创建场景Scene* EncyclopediaScene::createScene(){    auto scene = Scene::create();    auto layer = EncyclopediaScene::create();    scene->addChild(layer);    return scene;}bool EncyclopediaScene::init(){    if ( !Layer::init() ) {        return false;    }        this->addBackgroundImage();        this->addMenu();	return true;   }#pragma mark - for add functionvoid EncyclopediaScene::addBackgroundImage() {    for (int i = 0; i < 4; i++) {        for(int j =0; j < 5; j++) {            auto sprite = Sprite::createWithSpriteFrameName("encyclopedia_bgTile.png");            sprite->setPosition(Point(i * sprite->getContentSize().width,                                      j * sprite->getContentSize().height));            sprite->setAnchorPoint(Vec2::ZERO);            this->addChild(sprite, EncyclopediaSceneDrawingOrderBackground);        }    }}void EncyclopediaScene::addMenu() {    Size visibleSize = Director::getInstance()->getVisibleSize();        //防御塔    auto towerIntroNormal = Sprite::createWithSpriteFrameName("encyclopedia_button_towers_0001.png");    auto towerIntroSelected = Sprite::createWithSpriteFrameName("encyclopedia_button_towers_0001.png");    towerIntroSelected->setScale(0.95f);    auto towerIntroMenuItem = MenuItemSprite::create(towerIntroNormal,                                                     towerIntroSelected,                                                     CC_CALLBACK_1(EncyclopediaScene::onMenuTowerIntroCallback, this));    towerIntroMenuItem->setPosition(visibleSize.width * 0.23,                                    visibleSize.height * 0.65);            //百科 敌人    auto enemyIntroSprite = Sprite::createWithSpriteFrameName("encyclopedia_button_enemies_0001.png");    auto enemyIntroSelectedSprite = Sprite::createWithSpriteFrameName("encyclopedia_button_enemies_0001.png");    enemyIntroSelectedSprite->setScale(0.95f);        auto enemyIntroMenuItem = MenuItemSprite::create(enemyIntroSprite,                                                     enemyIntroSelectedSprite,                                                     CC_CALLBACK_1(EncyclopediaScene::onMenuEnemyIntroCallback,this));    enemyIntroMenuItem->setPosition(Point(visibleSize.width * 0.57,                                          visibleSize.height * 0.5));            //百科 提示    auto tipSprite = Sprite::createWithSpriteFrameName("encyclopedia_button_tips_0001.png");    auto tipSelectedSprite = Sprite::createWithSpriteFrameName("encyclopedia_button_tips_0001.png");    tipSelectedSprite->setScale(0.9f);    auto tipMenuItem = MenuItemSprite::create(tipSprite,                                              tipSelectedSprite,                                              CC_CALLBACK_1(EncyclopediaScene::onMenuTipCallback,this));    tipMenuItem->setPosition(Point(visibleSize.width * 0.86,                                   visibleSize.height * 0.3));        //百科 关闭按钮    auto colseSprite = Sprite::createWithSpriteFrameName("encyclopedia_button_close_0001.png");    auto colseMenuItem = MenuItemSprite::create(Sprite::createWithSpriteFrameName("encyclopedia_button_close_0001.png"),                                                colseSprite,                                                CC_CALLBACK_1(EncyclopediaScene::onMenuCloseCallback, this));        colseMenuItem->setPosition(Point(visibleSize.width * 0.87,                                     visibleSize.height * 0.83));        //百科 战斗攻略    auto strategyGuideSprite         = Sprite::createWithSpriteFrameName("encyclopedia_button_strategyGuide_0001.png");    auto strategyGuideSelectedSprite = Sprite::createWithSpriteFrameName("encyclopedia_button_strategyGuide_0001.png");    strategyGuideSelectedSprite->setScale(0.9f);    auto strategyGuideMenuItem = MenuItemSprite::create(strategyGuideSprite,                                                        strategyGuideSelectedSprite,                                                        CC_CALLBACK_1(EncyclopediaScene::onMenuStrategyGuideCallback, this));    strategyGuideMenuItem->setPosition(Point(visibleSize.width * 0.22,                                             visibleSize.height * 0.2));        auto menu = Menu::create(towerIntroMenuItem,                             enemyIntroMenuItem,                             tipMenuItem,                             colseMenuItem,                             strategyGuideMenuItem,                             NULL);    menu->setPosition(Vec2::ZERO);    this->addChild(menu, EncyclopediaSceneDrawingOrderMenu);}#pragma mark - for callback function////点击百科提示按钮，场景切换void EncyclopediaScene::onMenuTipCallback(Ref *pSender ){	SoundManager::playClickEffect();    Director::getInstance()->pushScene(EncyclopaediaTips::createScene());}//点击百科防御塔按钮，场景切换void EncyclopediaScene::onMenuTowerIntroCallback(Ref *pSender ){	SoundManager::playClickEffect();	Director::getInstance()->pushScene(TowerIntroScene::createScene());}//点击百科敌人按钮，场景切换void EncyclopediaScene::onMenuEnemyIntroCallback(Ref *pSender ){	SoundManager::playClickEffect();	Director::getInstance()->pushScene(EnemyIntroScene::createScene());}//点击百科关闭按钮，场景切换void EncyclopediaScene::onMenuCloseCallback(Ref *pSender ){	SoundManager::playClickEffect();	Director::getInstance()->popScene();}void EncyclopediaScene::onMenuStrategyGuideCallback(Ref *pSender ) {        }