#include "TransitionMidGame.h"#include "SimpleAudioEngine.h" using namespace CocosDenshion;USING_NS_CC;TransitionMidGame::TransitionMidGame() {}TransitionMidGame::~TransitionMidGame() {}TransitionMidGame * TransitionMidGame::create(float t, TransitionSceneTag sceneTag){	TransitionMidGame * pScene = new TransitionMidGame();    if (pScene && pScene->init()) {        pScene->_sceneTag = sceneTag;        		pScene->autorelease();        return pScene;     }     CC_SAFE_DELETE(pScene);     return NULL;}#pragma mark - on private functionvoid TransitionMidGame::onEnter(){	//要切入的场景    switch (_sceneTag) {        case TransitionSceneTagGameView:                        break;        case TransitionSceneTagChooseDifficult:                        break;        case TransitionSceneTagGame:                        break;    }//	this->_inScene->setVisible(false);	TransitionScene::onEnter();        this->initOpenAndCloseDoorEffect();    this->playCloseDoorAction();}void TransitionMidGame::initOpenAndCloseDoorEffect() {    Size visibleSize = Director::getInstance()->getVisibleSize();            _leftStartPoint.setPoint(0, visibleSize.height / 2.0f);    _leftEndPoint.setPoint(visibleSize.width / 2.0f,                           visibleSize.height / 2.0f);        _rightStartPoint.setPoint(visibleSize.width,                              visibleSize.height / 2.0f);    _rightEndPoint.setPoint(visibleSize.width / 2.0f,                            visibleSize.height / 2.0f);        _leftDoor = Sprite::createWithSpriteFrameName("transitionDoor.png");    _leftDoor->setAnchorPoint(Vec2::ANCHOR_MIDDLE_RIGHT);        _rightDoor = Sprite::createWithSpriteFrameName("transitionDoor.png");    _rightDoor->setAnchorPoint(Vec2::ANCHOR_MIDDLE_LEFT);        auto leftLoading = Sprite::createWithSpriteFrameName("transitionLoading_left.png");    leftLoading->setAnchorPoint(Vec2::ANCHOR_MIDDLE_RIGHT);    leftLoading->setPosition(Point(_leftDoor->getContentSize().width,                                   _leftDoor->getContentSize().height / 2));        auto rightLoading = Sprite::createWithSpriteFrameName("transitionLoading_right.png");    rightLoading->setAnchorPoint(Vec2::ANCHOR_MIDDLE_LEFT);    rightLoading->setPosition(Point(0,                                    _rightDoor->getContentSize().height/2));        this->addChild(_leftDoor, TransitionGameDrawingOrderEffect);    this->addChild(_rightDoor, TransitionGameDrawingOrderEffect);        _rightDoor->setFlippedX(true);    _leftDoor->setPosition(_leftStartPoint);    _rightDoor->setPosition(_rightStartPoint);        _leftDoor->addChild(leftLoading);    _rightDoor->addChild(rightLoading);}void TransitionMidGame::playOpenDoorAction() {    if (UserDefault::getInstance()->getIntegerForKey("backeffect", 1) == 1) {        SimpleAudioEngine::getInstance()->playEffect("sound/GUITransitionOpen.wav");    }    //开门动作    auto openLeftAction  = MoveTo::create(_duration / 3, _leftStartPoint);    auto openRightAction = MoveTo::create(_duration / 3, _rightStartPoint);        _leftDoor->runAction(Sequence::create(openLeftAction,                                          CallFuncN::create(CC_CALLBACK_0(TransitionMidGame::OnOpenDoorActionFinish, this)),                                          NULL));        _rightDoor->runAction(Sequence::create(openRightAction,                                           NULL));    }void TransitionMidGame::playCloseDoorAction() {    //关门动作    auto closeLeftAction  = MoveTo::create(_duration / 3, _leftEndPoint);    auto closeRightAction = MoveTo::create(_duration / 3, _rightEndPoint);    _leftDoor->runAction(Sequence::create(closeLeftAction,                                          CallFuncN::create(CC_CALLBACK_0(TransitionMidGame::OnCloseDoorActionFinish, this)),                                          NULL));        _rightDoor->runAction(Sequence::create(closeRightAction,                                           NULL));}#pragma mark - on callback functionvoid TransitionMidGame::OnCloseDoorActionFinish(void) {    if (UserDefault::getInstance()->getIntegerForKey("backeffect",1) == 1) {        SimpleAudioEngine::getInstance()->playEffect("sound/GUITransitionClose.wav");    }    _inScene->setVisible(true);    _outScene->setVisible(false);}void TransitionMidGame::OnOpenDoorActionFinish(void) {	//所以的活动完成后，要执行场行的Finish	TransitionScene::finish();}