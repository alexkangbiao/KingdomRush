#include "SimpleMageTowerlvl3.h"#include "ArchMageTower.h"#include "UpdatePanelLayer2.h"#include "BaseMap.h"#include "GameManager.h"#include "MageBolt.h"#include "NecromancerTower.h"#include "ArchMageTower.h"bool SimpleMageTowerlvl3::init() {	if (!BaseMageTower::init()) {		return false;	}	this->setTowerType(TOWER_TYPE_MAGE_3);//	this->setLevel(3);//	this->setScope(250.0f);//	this->setUpdateMoney(230);//	this->setBuildMoney(500);//    this->setShootPeriod(2.0f);//    this->setForce(60.0f);        this->initMageTower(this->getLevel());	this->schedule(schedule_selector(SimpleMageTowerlvl3::shoot), this->getShootPeriod());    	SoundManager::playMageTower3Ready();	return true;}#pragma mark - for update functionvoid SimpleMageTowerlvl3::updateTower() {	auto ArchMageTower = ArchMageTower::create();	ArchMageTower->setTerrain(_terrain);	ArchMageTower->setTag(_terrain->getTag());	ArchMageTower->setPosition(Point(0,20));	_terrain->addChild(ArchMageTower);	this->removeFromParent();}void SimpleMageTowerlvl3::showUpdateMenu() {	auto updatePanelLayer = UpdatePanelLayer2::createPanel(21, 22, 230, 230);	updatePanelLayer->setTag(_terrain->getTag() + UPDATE_MENU_TAG);	updatePanelLayer->setTower(this);	updatePanelLayer->setPosition(this->getParent()->getPosition());	static_cast<BaseMap*>(this->getParent()->getParent())->mTouchLayer->addChild(updatePanelLayer);	if (GameManager::getInstance()->CURRENT_LEVEL <= this->getUpdate1StartLevel()) {		updatePanelLayer->setCanUpdate1(false);	}	if (GameManager::getInstance()->CURRENT_LEVEL <= this->getUpdate2StartLevel()) {        updatePanelLayer->setCanUpdate2(false);	}	updatePanelLayer->playShowAnimation();	_isUpdateMenuShown = true;}void SimpleMageTowerlvl3::update1(){	auto necromancerTower = NecromancerTower::create();	necromancerTower->setTerrain(_terrain);	necromancerTower->setTag(_terrain->getTag());	necromancerTower->setPosition(Point(0,20));	_terrain->addChild(necromancerTower);        //删除在缓冲子弹队列中的内容    this->refreshBulletVector();	this->removeTower();}void SimpleMageTowerlvl3::update2(){	auto archMageTower = ArchMageTower::create();	archMageTower->setTerrain(_terrain);	archMageTower->setTag(_terrain->getTag());	archMageTower->setPosition(Point(0,20));	_terrain->addChild(archMageTower);	this->removeTower();}