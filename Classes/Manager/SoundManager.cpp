#include "SoundManager.h"#include "cocos2d.h"#include "SimpleAudioEngine.h" #include "UserDefaultManager.hpp"using namespace CocosDenshion;USING_NS_CC;bool SoundManager::checkEffectState() {    return UserDefaultManager::getInstance()->checkEffectState();}bool SoundManager::checkBackgroundState() {    return UserDefaultManager::getInstance()->checkBackgroundMusicState();}#pragma mark - for background musicvoid SoundManager::playWelcomeBackMusic(){    SimpleAudioEngine::getInstance()->playBackgroundMusic("sound/savage_music_theme.wav");    if(checkBackgroundState())        SimpleAudioEngine::getInstance()->pauseBackgroundMusic();}void SoundManager::playDesertBattle(){    SimpleAudioEngine::getInstance()->playBackgroundMusic("sound/savage_music_desert_battle.wav");    if(checkBackgroundState())        SimpleAudioEngine::getInstance()->pauseBackgroundMusic();}void SoundManager::playJungleBattle(){    SimpleAudioEngine::getInstance()->playBackgroundMusic("sound/savage_music_jungle_battle.wav");    if(checkBackgroundState())        SimpleAudioEngine::getInstance()->pauseBackgroundMusic();}void SoundManager::playGameTheme1(){    SimpleAudioEngine::getInstance()->playBackgroundMusic("sound/Map_Theme_1.wav");    if(checkBackgroundState())        SimpleAudioEngine::getInstance()->pauseBackgroundMusic();}#pragma mark - for Effect musicvoid SoundManager::playEfreetiLaugh(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/boss_efreeti_evillaugh.wav");}void SoundManager::playWinStars(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_WinStars.wav");}void SoundManager::playEfreetiDeath(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/boss_efreeti_death.wav");}void SoundManager::playEfreetiClap(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/boss_efreeti_clapping.wav");}void SoundManager::playClickEffect(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_GUIButtonCommon.wav");}void SoundManager::playNextWaveReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_NextWaveReady.wav");}void SoundManager::playIncomingWave(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_WaveIncoming.wav");}void SoundManager::playArrowShoot1(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_ArrowHit2.wav");}void SoundManager::playArrowShoot2(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_ArrowHit3.wav");}void SoundManager::playTowerUpdate(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_TowerUpgrade.wav");}void SoundManager::playTowerSell(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_TowerSell.wav");}void SoundManager::playShipOpen(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/ship_path_break.wav");}void SoundManager::playTowerBuilding(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_TowerBuilding.wav");}void SoundManager::playArcherReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Archer_Ready.wav");}void SoundManager::playTowerMenu(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_GUIOpenTowerMenu.wav");}void SoundManager::playArcher2Ready(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Archer_Taunt1.wav");}void SoundManager::playArcher3Ready(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Archer_Taunt2.wav");}void SoundManager::playCrossbowReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/crossbow_taunt_ready.wav");}void SoundManager::playCrossbowMultishot(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/crossbow_multishot.wav");}void SoundManager::playCrossbowEagle(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/crossbow_eagle.wav");}void SoundManager::playTotemReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/axlethrower_taunt_totem1.wav");}void SoundManager::playTotemShot(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/axlethrower_totem_vanish.wav");}void SoundManager::playTotemSpirits(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/axlethrower_totem_spirits.wav");}void SoundManager::playTotemWeakness(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/axlethrower_totem_weakness.wav");}void SoundManager::playEarthquakeReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/earthquake_taunt_ready.wav");}void SoundManager::playEarthquakeHit(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/dwaarp_attack.wav");}void SoundManager::playEarthquakeDrillin(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/dwaarp_drillIn.wav");}void SoundManager::playEarthquakeDrillOut(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/dwaarp_drillOut.wav");}void SoundManager::playEarthquakeLava(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/dwaarp_lavaSmash.wav");}void SoundManager::playMechReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/mecha_taunt_ready.wav");}void SoundManager::playMechWalk(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/mecha_walk.wav");}void SoundManager::playMechShit(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/mecha_dropoil.wav");}void SoundManager::playMechLoading(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/mecha_spawn.wav");}void SoundManager::playArtilleryReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Artillery_Ready.wav");}void SoundManager::playArtillery2Ready(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Artillery_Taunt1.wav");}void SoundManager::playArtillery3Ready(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Artillery_Taunt2.wav");}void SoundManager::playBarrackReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Barrack_Ready.wav");}void SoundManager::playBarrack2Ready(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Barrack_Taunt1.wav");}void SoundManager::playBarrack3Ready(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Barrack_Taunt2.wav");}void SoundManager::playBarrackOpendoor(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_TowerOpenDoor.wav");}void SoundManager::playBarrackMove(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Barrack_Move.wav");}void SoundManager::playArchmageReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/archmage_taunt_ready.wav");}void SoundManager::playArchmageShot(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/archmage_attack.wav");}void SoundManager::playArchmageTwister(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/archmage_twister.wav");}void SoundManager::playArchmagePrecharge(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/archmage_precharge.wav");}void SoundManager::playMageTowerReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Mage_Ready.wav");}void SoundManager::playMageTower2Ready(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Mage_Taunt1.wav");}void SoundManager::playMageTower3Ready(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Mage_Taunt2.wav");}void SoundManager::playMageTowerShot(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_MageShot.wav");}void SoundManager::playNecTowerReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/necromancer_taunt_ready.wav");}void SoundManager::playDKReady(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/necromancer_taunt_dknight.wav");}void SoundManager::playNecShot(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/necromancer_attack.wav");}void SoundManager::playDKTaunt(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/necromancer_deathknight_taunt_2.wav");}void SoundManager::playArrowRelease(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_ArrowRelease2.wav");}void SoundManager::playBomb(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_Bomb1.wav");}void SoundManager::playFireballHit(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_FireballHit.wav");}void SoundManager::playFireballUnleash(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_FireballUnleash.wav");}void SoundManager::playQuestCompleted(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_QuestCompleted.wav");}void SoundManager::playQuestFailed(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_QuestFailed.wav");}void SoundManager::playAssassinMove(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/assassin_taunt_ready.wav");}void SoundManager::playReinforcement(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Reinforcements_Event2.wav");}void SoundManager::playCash(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/inapp_cash.wav");}void SoundManager::playFreeze(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/inapp_freeze.wav");}void SoundManager::playHearts(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/inapp_hearts.wav");}void SoundManager::playRallyPointPlaced(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/Sound_RallyPointPlaced.wav");}void SoundManager::playChestdrum(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/boss_mono_chestdrum.wav");}void SoundManager::playChimps_1(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/boss_mono_chimps_1.wav");}void SoundManager::playChimps_2(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/boss_mono_chimps_2.wav");}void SoundManager::playChimps_3(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/boss_mono_chimps_3.wav");}void SoundManager::playMonoDeath(){	if(checkEffectState())		SimpleAudioEngine::getInstance()->playEffect("sound/boss_mono_death.wav");}