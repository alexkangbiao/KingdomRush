#include "Terrain.h"#include "BaseMap.h"#include "TowerPanelLayer.h"Terrain* Terrain::createTerrain(int type) {    auto terrain = new Terrain();    if(terrain && terrain->initWithType(type)) {        terrain->autorelease();        return terrain;    }        CC_SAFE_DELETE(terrain);    return NULL;}bool Terrain::initWithType(int type) {    if (!Sprite::init()) {        return false;    }    _isUpdateMenuShown = false;    switch (type) {        case(TerrainType_1):{            _terrainBaseSprite = Sprite::createWithSpriteFrameName("build_terrain_0004.png");}            break;        case(TerrainType_2):{            _terrainBaseSprite = Sprite::createWithSpriteFrameName("build_terrain_0005.png");}            break;        case(TerrainType_3):{            _terrainBaseSprite = Sprite::createWithSpriteFrameName("build_terrain_0006.png");}            break;        default:{            _terrainBaseSprite = Sprite::createWithSpriteFrameName("build_terrain_0004.png");}            break;    }    this->addChild(_terrainBaseSprite, TerrainDrawingOrderBackground);    auto listener = EventListenerTouchOneByOne::create();    listener->onTouchBegan = CC_CALLBACK_2(Terrain::onTouchBegan, this);    listener->onTouchEnded = CC_CALLBACK_2(Terrain::onTouchEnded, this);//    listener->setSwallowTouches(true);    _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, _terrainBaseSprite);        _smokeEffect = Sprite::createWithSpriteFrameName("effect_sellSmoke_0001.png");    this->addChild(_smokeEffect, TerrainDrawingOrderSmoke);    _smokeEffect->setVisible(false);        return true;}#pragma mark - for on private functionvoid Terrain::showUpdateMenu() {    auto towerPanelLayer = TowerPanelLayer::create();    towerPanelLayer->setPosition(this->getPosition());    towerPanelLayer->setTag(getTag());    towerPanelLayer->setMyTerrain(this);    static_cast<BaseMap*>(this->getParent())->mTouchLayer->addChild(towerPanelLayer);    towerPanelLayer->playShowAnimation();    _isUpdateMenuShown = true;}void Terrain::hideUpdateMenu() {    static_cast<BaseMap*>(this->getParent())->mTouchLayer->removeChildByTag(getTag());    _isUpdateMenuShown = false;}#pragma mark - for on callback functionbool Terrain::onTouchBegan(Touch *touch, Event *event) {    return true;}void Terrain::onTouchEnded(Touch* touch, Event* event) {    auto target = static_cast<Sprite*>(event->getCurrentTarget());    Point locationInNode = target->convertTouchToNodeSpace(touch);    Size size = target->getContentSize();    Rect rect = Rect(0, 0, size.width, size.height);        if (rect.containsPoint(locationInNode) && target->isVisible()) {        if (_isUpdateMenuShown) {            this->hideUpdateMenu();        } else {            this->showUpdateMenu();        }    } else {        if (_isUpdateMenuShown) {            this->hideUpdateMenu();        }    }}#pragma mark - for public functionvoid Terrain::removeTerrainBaseSprite() {    this->_terrainBaseSprite->removeFromParent();}void Terrain::setTerrainBaseSpriteVisible(bool isVisible) {    this->_terrainBaseSprite->setVisible(isVisible);}void Terrain::executeSmokeEffect() {    _smokeEffect->setVisible(true);    _smokeEffect->runAction(Sequence::create(                                      Animate::create(AnimationCache::getInstance()->getAnimation("sell_smoke")),//                                      CallFuncN::create(CC_CALLBACK_0(Sprite::removeFromParent, _smokeEttct)),                                      NULL));}