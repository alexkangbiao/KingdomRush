#include "ExtensibleSkillButton.h"#include "Utility.h"#include "GameManager.h"ExtensibleSkillButton::ExtensibleSkillButton():_backpackCallback(nullptr),_callback(nullptr),_selectIconTag(0),_isSelect(false) {}ExtensibleSkillButton::~ExtensibleSkillButton() {}void ExtensibleSkillButton::onTouchClickCallBack(Ref* pSender) {    log("touch ExtensibleSkillButton::onTouchClickCallBack");    if (_isSelect) {        backpackIcon->unselected();        _isSelect = false;        backpackExtensibleBackground->setVisible(false);    } else {        backpackIcon->selected();        _isSelect = true;        backpackExtensibleBackground->setVisible(true);    }    if (_backpackCallback) {        _backpackCallback(this);    }    }void ExtensibleSkillButton::onTouchBackpackIconCallBack(Ref* pSender) {    MenuItemImage* target = dynamic_cast<MenuItemImage *>(pSender);    log("touch ExtensibleSkillButton::onTouchBackpackIconCallBack Tag:%d", target->getTag());        int number = UserDefault::getInstance()->getIntegerForKey(                            Utility::string_format(GameManager::getInstance()->SLOTX_SHOP,                                                   target->getTag()).c_str());//    number = 999;    if (number > 0) number --;    UserDefault::getInstance()->setIntegerForKey(                            Utility::string_format(GameManager::getInstance()->SLOTX_SHOP,                                                   target->getTag()).c_str(), number);    this->addNumberSprite(target, number);        switch (target->getTag()) {        case BackpackIconTag_1:            break;        case BackpackIconTag_2:            break;        case BackpackIconTag_3:            break;        case BackpackIconTag_4:            break;        case BackpackIconTag_5:            break;        case BackpackIconTag_6:            break;                    default:            break;    }    _selectIconTag = target->getTag();        if (_callback) {        _callback(this);    }}void ExtensibleSkillButton::setCallback(const ccMenuCallback& callback) {    _callback = callback;}void ExtensibleSkillButton::setBackpackCallback(const ccMenuCallback& backpackCallback) {    _backpackCallback = backpackCallback;}bool ExtensibleSkillButton::init() {    Sprite* normalSprite = Sprite::createWithSpriteFrameName("power_portrait_backpack_0001.png");    Sprite* selectedSprite = Sprite::createWithSpriteFrameName("power_portrait_backpack_0002.png");        backpackIcon = MenuItemImage::create();    backpackIcon->setNormalImage(normalSprite);    backpackIcon->setSelectedImage(selectedSprite);    backpackIcon->setCallback(CC_CALLBACK_1(ExtensibleSkillButton::onTouchClickCallBack, this));    backpackIcon->setPosition(Vec2::ZERO);        auto menu = Menu::create(backpackIcon, NULL);    menu->setPosition(Vec2::ZERO);    this->addChild(menu, ExtensibleSkillButtonDrawingOrderIcon);        //锦囊背景    backpackExtensibleBackground = Sprite::createWithSpriteFrameName("backPack_hover.png");    backpackExtensibleBackground->setAnchorPoint(Vec2::ANCHOR_MIDDLE_RIGHT);    backpackExtensibleBackground->setPosition(Point(Vec2::ZERO));    backpackExtensibleBackground->setVisible(false);//    backpackExtensibleBackground->setEnable(false);    this->addChild(backpackExtensibleBackground, ExtensibleSkillButtonDrawingOrderBackgroundImage);        Vector<MenuItem *> menuItemVector;    for(int i = 0; i < 6 ; i++){        int number = UserDefault::getInstance()->getIntegerForKey(                            Utility::string_format(GameManager::getInstance()->SLOTX_SHOP, i).c_str());        number = 99;                backpackIcons[i] = MenuItemImage::create();        Sprite* normalSprite = Sprite::createWithSpriteFrameName(Utility::string_format("backPack_icons_000%d.png", i + 1));        backpackIcons[i]->setNormalImage(normalSprite);        backpackIcons[i]->setSelectedImage(normalSprite);        backpackIcons[i]->setDisabledSpriteFrame(                            SpriteFrameCache::getInstance()->getSpriteFrameByName(Utility::string_format("backPack_icons_off_000%d.png", i + 1)));        backpackIcons[i]->setAnchorPoint(Vec2::ANCHOR_MIDDLE_RIGHT);        backpackIcons[i]->setPosition(Point((normalSprite->getContentSize().width - 10) * (i + 1),                                            backpackExtensibleBackground->getContentSize().height / 2));        backpackIcons[i]->setTag(i);        backpackIcons[i]->setCallback(CC_CALLBACK_1(ExtensibleSkillButton::onTouchBackpackIconCallBack, this));                if (number == 0) {            backpackIcons[i]->setEnabled(false);        }        menuItemVector.pushBack(backpackIcons[i]);        this->addNumberSprite(backpackIcons[i], number);    }        Menu* backpackIconMenu = Menu::createWithArray(menuItemVector);    backpackIconMenu->setPosition(backpackExtensibleBackground->getPosition());    backpackExtensibleBackground->addChild(backpackIconMenu, ExtensibleSkillButtonDrawingOrderIcon);    return true;}void ExtensibleSkillButton::unSelected() {    if (_isSelect) {        backpackIcon->unselected();        backpackExtensibleBackground->setVisible(false);        _isSelect = false;    }}void ExtensibleSkillButton::addNumberSprite(MenuItemImage* target, int number) {        if (target->getChildByTag(BackpackIconNumberTag) != nullptr) {        target->removeChildByTag(BackpackIconNumberTag);    }        if (number > 99) {        number = 99;    }    int tensDigit = number / 10;    int digit     = number % 10;    if (tensDigit > 0) {        Sprite* tensDigitNumberSprite = Sprite::createWithSpriteFrameName(                                        Utility::string_format("backPack_numbers_000%d.png", tensDigit));        tensDigitNumberSprite->setPosition(Point(target->getContentSize().width / 4 * 3                                                 - tensDigitNumberSprite->getContentSize().width + 15,                                                 target->getContentSize().height / 4));        tensDigitNumberSprite->setTag(BackpackIconNumberTag);        target->addChild(tensDigitNumberSprite);    }    Sprite* digitNumberSprite = Sprite::createWithSpriteFrameName(Utility::string_format("backPack_numbers_000%d.png", digit));    digitNumberSprite->setPosition(Point(target->getContentSize().width / 4 * 3                                         + digitNumberSprite->getContentSize().width - 15,                                         target->getContentSize().height / 4));    digitNumberSprite->setTag(BackpackIconNumberTag);        target->addChild(digitNumberSprite);        if (number <= 0)        target->setEnabled(false);}Size ExtensibleSkillButton::getExtensibleSkillButtonSize() {    return this->backpackIcon->getContentSize();}