#include "SimpleArtilleryTowerlvl3.h"#include "updatePanelLayer.h"#include "GameManager.h"#include "BaseMap.h"#include "EarthquakeTower.h"#include "UpdatePanelLayer2.h"#include "MechsTower.h"bool SimpleArtilleryTowerlvl3::init() {	if (!BaseArtilleryTower::init()) {		return false;	}	this->setTowerType(TOWER_TYPE_ARTILLERY_3);//	this->setLevel(3);//	this->setScope(200.0f);//	this->setUpdateMoney(230);//	this->setBuildMoney(320);//    this->setShootPeriod(3.0f);        this->initArtilleryTower(this->getLevel());    	schedule(schedule_selector(SimpleArtilleryTowerlvl3::shoot), this->getShootPeriod());	SoundManager::playArtillery3Ready();    	return true;}#pragma mark - for update functionvoid SimpleArtilleryTowerlvl3::showUpdateMenu(){	auto updatePanelLayer = UpdatePanelLayer2::createPanel(27, 28, 230, 230);	updatePanelLayer->setTag(_terrain->getTag() + UPDATE_MENU_TAG);	updatePanelLayer->setTower(this);	updatePanelLayer->setPosition(this->getParent()->getPosition());	static_cast<BaseMap*>(this->getParent()->getParent())->mTouchLayer->addChild(updatePanelLayer);	if (GameManager::getInstance()->CURRENT_LEVEL <= this->getUpdate1StartLevel()) {        updatePanelLayer->setCanUpdate1(false);	}	if (GameManager::getInstance()->CURRENT_LEVEL <= this->getUpdate2StartLevel()) {		updatePanelLayer->setCanUpdate2(false);	}	updatePanelLayer->playShowAnimation();	_isUpdateMenuShown = true;}void SimpleArtilleryTowerlvl3::update1() {	auto earthquakeTower = EarthquakeTower::create();	earthquakeTower->setTerrain(_terrain);	earthquakeTower->setTag(_terrain->getTag());	earthquakeTower->setPosition(Point(0, 20));	_terrain->addChild(earthquakeTower);        //删除在缓冲子弹队列中的内容    this->refreshBulletVector();	this->removeTower();}void SimpleArtilleryTowerlvl3::update2() {	auto mechsTower = MechsTower::create();	mechsTower->setTerrain(_terrain);	mechsTower->setTag(_terrain->getTag());	mechsTower->setPosition(Point(0, 30));	_terrain->addChild(mechsTower);        //删除在缓冲子弹队列中的内容    this->refreshBulletVector();	this->removeTower();}